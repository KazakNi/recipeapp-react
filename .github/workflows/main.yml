name: foodgram-CI

on:
  push:
    branches: [ master ]
jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r backend/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8 backend
  build_and_push_to_docker_hub:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERLOGIN }} 
          password: ${{ secrets.DOCKERPASS }}
      - name: Push to back image Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: backend
          push: true
          tags: nikitakaz/foodgram:v1.0.0
      - name: Push front image to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: frontend
          push: true
          tags: nikitakaz/foodgram_front:v1.0.0
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          ls -a
          sudo docker pull nikitakaz/foodgram:v1.0.0
          sudo docker pull nikitakaz/foodgram_front:v1.0.0
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm $(docker ps -a -q)
          sudo docker-compose up
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
#(((((